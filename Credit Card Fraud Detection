{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":9120,"databundleVersionId":860599,"sourceType":"competition"},{"sourceId":50160,"databundleVersionId":7921029,"sourceType":"competition"},{"sourceId":666,"sourceType":"datasetVersion","datasetId":306},{"sourceId":1056,"sourceType":"datasetVersion","datasetId":531},{"sourceId":23498,"sourceType":"datasetVersion","datasetId":310},{"sourceId":552038,"sourceType":"datasetVersion","datasetId":263888},{"sourceId":1399887,"sourceType":"datasetVersion","datasetId":817870},{"sourceId":1660340,"sourceType":"datasetVersion","datasetId":982921},{"sourceId":4422779,"sourceType":"datasetVersion","datasetId":2590623},{"sourceId":8050363,"sourceType":"datasetVersion","datasetId":4541632},{"sourceId":16695845,"sourceType":"kernelVersion"}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true},"colab":{"name":"Credit Card Fraud Detection","provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/credit-card-fraud-detection-5917f93f-d447-4e60-a134-b149d9d633c1.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240503/auto/storage/goog4_request&X-Goog-Date=20240503T151116Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=390c34a4fbe49020a775c62ab59d277444f9c94094dd66b0bbf3600f3ab25079120af515f0beb4e8f1e158db80cc129a591bad3d653613a410ec750900c617db4d17700ba2f4d17eb2cdfb648ff82c4f984d06c3addbbe6c0cc2ff118567c73c5d1e3a93947391992dd01124e9d0feed5fded36c24e2965bdcfa3b5e62ec9b98aa922a481c9de1cfdfa747793e98de1ab9974eddbee01f5981c309f5f548bc3999864050a67f1cbdd42d3ed8c356ee6422e83fe7417606009b116bb21e86efbd634f2dbbd90cedef257071f97bd824a1eb6cdd678aa8cfa50ac9a66a0a8edc6090c17982c71739c4070d39631241bcabcb33010f43663f9c7e4b55db41d874b5","timestamp":1714752076561}]}},"nbformat_minor":0,"nbformat":4,"cells":[{"source":["\n","# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES\n","# TO THE CORRECT LOCATION (/kaggle/input) IN YOUR NOTEBOOK,\n","# THEN FEEL FREE TO DELETE THIS CELL.\n","# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON\n","# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR\n","# NOTEBOOK.\n","\n","import os\n","import sys\n","from tempfile import NamedTemporaryFile\n","from urllib.request import urlopen\n","from urllib.parse import unquote, urlparse\n","from urllib.error import HTTPError\n","from zipfile import ZipFile\n","import tarfile\n","import shutil\n","\n","CHUNK_SIZE = 40960\n","DATA_SOURCE_MAPPING = 'default-of-credit-card-clients-dataset:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F306%2F666%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240503%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240503T151115Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D021c3deed8bd6f92a28d225f20cdfb147344d47f0d9c32365e43eda425b49bafb5d7470e066b3fbc67f75683295375f12d2b0c87cde791a859edb82cad866a950bbbcdfaf470e51f67a20a394c771c78ac5be8191f871309bf3bdd9acfe7b6bde1041e14f19178b1a879890e9b322c50798de2e6d690581d1968d8445db9fbf7aa8eade608dc916c38a23d429960216c2615dd411f38801919db181d946fb385bd93e6ec1cee0524415f75cf74e24ff95a7985692fd525a042a22e7def7961cb2f403bc6d40b6e1f296b9c6a4ad30632dec61c9199b09f4c32f6e4c8dd43b6eb7147bd3cea78e8e5cc6b1c28ca305781ac715c4ad27cb52b6d3d5c6b6ab9a237,german-credit:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F531%2F1056%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240503%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240503T151115Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D26e69b7b93f2c90bcb71b649880d2096f27a5cebb2bb1b1a951b6f6796477baa432966a416e6c984c0368e212fdb9b85f9cfa1378a09454de2e19d34e895e26d58507c9f41288ff24b25510fecffe158df8d0e6017e8ca9177956eda9cd0952aede060610900def6c9dcc45c9dd804d539ee3b345cb897cc9461c6fa982f535734ace54a0bdd4c353184e6a612ebfd3f5ef9a438f767ef1663c3d3764ac6781e40dcdc0e834282171af6d8ff9f46f01ccb292dcba0173dfbde57398bd66f73ceceb4368f2b33befc7e912bcb0de909999aafe03fa1f6b82d241f1ae1d9f03d814879f0f28187f10d20e32c1c8f58f994eaf4ba472e1adce6c8af78987020099b,creditcardfraud:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F310%2F23498%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240503%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240503T151115Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D17a176ba4fb66bce22be6ba04c11da5caa64b7a3f134cd093f43397a85246379335d6af6299f1b8cd01af9569130fae7ead183d6c4ede70fcbee22f3b245671828a7e21fef9b61cb5a3c35d352adbe0c81bab787087d83e7614a526552e83b3a93770376db964e2ea64dee1b53ef5e0a03b92dd461559755600177f62c852db8cc5b50943e021ccb58197364b7d17be4050cdbe7e5d42b38f068297fc33326ccdab8905e59598d603049c313f83203c79f573606569bd6ae522bdd06536acf3f5b4c6958e0dd37797a49d7fe8b38779e45b1188c184f2deec26a74fcc0f6642e3ec4e1604f64bf960a02a25ab32181608c372f1d2b187dcc8733810e3843c39a,credit-card:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F263888%2F552038%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240503%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240503T151115Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D8d475a1bfd78f6c62779f2e50cb568936e0e3258bcafd2256ed73918121d4b1f9f5c451328bd33b9ff997af85c66df2c30fbb31387a0a39f50e736f256db8c01b600c2ebdaaea389cf3d05f0871d5a0b57c8e71274e189406d47ce27ce6b24e5fde53fb34e0a5a8a8515604a9eaea9af2fe804c45825ab0f97b2d1b6cf8574d9718df740baa2e6faef3478cd805807611bf115423944102b1238ac7f0df171bf82d733c6e8d0e9d14e541c1be2f823d6b0324295d1d76aa37963a666cde8c396cff1df14d8fe28cf7c19ee1ab8f82af6316bdf9918832ad7f54f65785605419fa6380cf9dc2eb3e1e2518bbb597488f59c59fd38138854f0d25e39b55f657523,fraud-detection:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F817870%2F1399887%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240503%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240503T151115Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D550201cf668725fc296906515cfa47e10fad4840e40622239a76abe81c963f47720ebb9f7416188243d1633b9ae1fc8d402d9a26dd1773e4763ef4c69cee65f0f3369d938b1b8ec5c001f70e67692daa96ccca163078589a6d28750d6186a67213fa944e81365c3ae1dd7e94b740fdf609b53dbdde691d11f62e751eb9665a3c330b63e2d1f16ae661d0a0ab4d655207651feb533cffb9b3a79f19df0340ee9e5b29b39bcdc8d5f1dd8e19834d101c9d4d8875a0d62c097a8c71ed434d3d27616f092becb0a112daa36ad689c69bd57e8ea441be416ae806d13a4f9178c6f82e2e661b1d3ac9ae23c9e103e18115fc239c350b08810c3587e7aa3a62e0696106,credit-card-customers:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F982921%2F1660340%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240503%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240503T151115Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D3618540557c1e0e8faafedc43bd4e2c48605c2ac2d7c37f60e5b78a1d3f2734ee03e27fde85d4285ffa043b5a8e0d90be6fa5351105ae51717d74f506e8c26cc5a4d10d7d0d7edcd721fc57c1d4ea5f373ab262094a529cd1afeb4332f186671179970eb835c9508a77735ce18abb25ac0cb3ba3e0ad80f00941b5873eb77bc47adecffd70291b065129b6bdbd8f00bf28ab0b52710e3360663f80153f290d32fd52b16d4beb7940b658750cc0c31840a8d77bfb1209bb59925c7df61a70df3e0e7dd9937c77b2343195d88ef0a524ce86436a1d67ad34ea8be6512cca68dd1a868aa489978fcb537475b235f1afa53cdc1a5a10c9e2edcaea7c0cf73cc1c49f,credit-card-customers-prediction:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F2590623%2F4422779%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240503%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240503T151115Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D76947c1a2c374b88cdb2ecb93ba26b72184dd89e8cdf00d568ebe3037ade3da5207758c6e4249b3efb9a53bb394f438a4e5977b06a32595986d1f590db0577d57c448d03fca2ef3325d6b91712843fd93678bdde4f68ba6067735b8ed22421ae2a4250e87e4927c34164af27e654c4b23a9c6a86bc7b5b9e396cffb88f676a2db8358289aa3ece3d23d4ebc77a97dac4631e817986065a7a41aaf7a0bfaf8a92b3f1598ca992c549045c35c8194dcd3198b2e950839a28ef57c1fec54a9f2e36c32a5975055cdc343916ebb13280642d2b65186a30edac6b6229b946c3de0a81a12484acec8dff5c46aef8c0b4565823f48a4c18b81f095d6399eb20e07ec085,credit-card-spendings:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F4541632%2F8050363%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240503%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240503T151116Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D8549aae1bcb2190aeec6fb2ec2f53717c27d19a776d75ec271029bb685787fed95227ebd0dad6c68edccdd5a55062302517ac923d1dcbe348a62f0459fad98d540abb868f5284df661d3360808b12a3a4d68ba4e67bd021b32d3922e278b9a9c18548f2327c8e67fc023a38090dcd638bfeb5854e01c90c1a90c28e5654e75dc2982d7366c886512c43154c3414b55b72b038eecb77548ddc3d953b27593df93df3e8e1ad68171ad3339f50ac981279daf414a0804b6390583d13557da04db05760fe2bff7e322bcf2288ca3b953ddba5aa7abd0e0bcb4e58c9100e2fb34d5ea6d8553136f7d793225105d07bf7b8cc8f770bd14b3406acd3dd2f535f7abdc96'\n","\n","KAGGLE_INPUT_PATH='/kaggle/input'\n","KAGGLE_WORKING_PATH='/kaggle/working'\n","KAGGLE_SYMLINK='kaggle'\n","\n","!umount /kaggle/input/ 2> /dev/null\n","shutil.rmtree('/kaggle/input', ignore_errors=True)\n","os.makedirs(KAGGLE_INPUT_PATH, 0o777, exist_ok=True)\n","os.makedirs(KAGGLE_WORKING_PATH, 0o777, exist_ok=True)\n","\n","try:\n","  os.symlink(KAGGLE_INPUT_PATH, os.path.join(\"..\", 'input'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","try:\n","  os.symlink(KAGGLE_WORKING_PATH, os.path.join(\"..\", 'working'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","\n","for data_source_mapping in DATA_SOURCE_MAPPING.split(','):\n","    directory, download_url_encoded = data_source_mapping.split(':')\n","    download_url = unquote(download_url_encoded)\n","    filename = urlparse(download_url).path\n","    destination_path = os.path.join(KAGGLE_INPUT_PATH, directory)\n","    try:\n","        with urlopen(download_url) as fileres, NamedTemporaryFile() as tfile:\n","            total_length = fileres.headers['content-length']\n","            print(f'Downloading {directory}, {total_length} bytes compressed')\n","            dl = 0\n","            data = fileres.read(CHUNK_SIZE)\n","            while len(data) > 0:\n","                dl += len(data)\n","                tfile.write(data)\n","                done = int(50 * dl / int(total_length))\n","                sys.stdout.write(f\"\\r[{'=' * done}{' ' * (50-done)}] {dl} bytes downloaded\")\n","                sys.stdout.flush()\n","                data = fileres.read(CHUNK_SIZE)\n","            if filename.endswith('.zip'):\n","              with ZipFile(tfile) as zfile:\n","                zfile.extractall(destination_path)\n","            else:\n","              with tarfile.open(tfile.name) as tarfile:\n","                tarfile.extractall(destination_path)\n","            print(f'\\nDownloaded and uncompressed: {directory}')\n","    except HTTPError as e:\n","        print(f'Failed to load (likely expired) {download_url} to path {destination_path}')\n","        continue\n","    except OSError as e:\n","        print(f'Failed to load {download_url} to path {destination_path}')\n","        continue\n","\n","print('Data source import complete.')\n"],"metadata":{"id":"sBnD8RisF9QW","executionInfo":{"status":"ok","timestamp":1714750558152,"user_tz":-330,"elapsed":71983,"user":{"displayName":"","userId":""}},"outputId":"36fbac10-668e-42c1-c853-9635a9b054c9","colab":{"base_uri":"https://localhost:8080/"}},"cell_type":"code","outputs":[{"output_type":"stream","name":"stdout","text":["Downloading default-of-credit-card-clients-dataset, 1025318 bytes compressed\n","[==================================================] 1025318 bytes downloaded\n","Downloaded and uncompressed: default-of-credit-card-clients-dataset\n","Downloading german-credit, 11160 bytes compressed\n","[==================================================] 11160 bytes downloaded\n","Downloaded and uncompressed: german-credit\n","Downloading creditcardfraud, 69155672 bytes compressed\n","[==================================================] 69155672 bytes downloaded\n","Downloaded and uncompressed: creditcardfraud\n","Downloading credit-card, 117814223 bytes compressed\n","[==================================================] 117814223 bytes downloaded\n","Downloaded and uncompressed: credit-card\n","Downloading fraud-detection, 211766662 bytes compressed\n","[==================================================] 211766662 bytes downloaded\n","Downloaded and uncompressed: fraud-detection\n","Downloading credit-card-customers, 387771 bytes compressed\n","[==================================================] 387771 bytes downloaded\n","Downloaded and uncompressed: credit-card-customers\n","Downloading credit-card-customers-prediction, 387771 bytes compressed\n","[==================================================] 387771 bytes downloaded\n","Downloaded and uncompressed: credit-card-customers-prediction\n","Downloading credit-card-spendings, 326253 bytes compressed\n","[==================================================] 326253 bytes downloaded\n","Downloaded and uncompressed: credit-card-spendings\n","Data source import complete.\n"]}],"execution_count":10},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import accuracy_score, confusion_matrix"],"metadata":{"execution":{"iopub.status.busy":"2024-04-27T07:52:08.828882Z","iopub.execute_input":"2024-04-27T07:52:08.829172Z","iopub.status.idle":"2024-04-27T07:52:09.919464Z","shell.execute_reply.started":"2024-04-27T07:52:08.829147Z","shell.execute_reply":"2024-04-27T07:52:09.918515Z"},"trusted":true,"id":"1ZSQzDqcF9QZ","executionInfo":{"status":"ok","timestamp":1714750570429,"user_tz":-330,"elapsed":4,"user":{"displayName":"","userId":""}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":["# **Load the Dataset**"],"metadata":{"id":"VDJhJAFxGUYs"}},{"cell_type":"code","source":["data =pd.read_csv('/kaggle/input/creditcardfraud/creditcard.csv')"],"metadata":{"execution":{"iopub.status.busy":"2024-04-27T07:52:18.744971Z","iopub.execute_input":"2024-04-27T07:52:18.745444Z","iopub.status.idle":"2024-04-27T07:52:22.031629Z","shell.execute_reply.started":"2024-04-27T07:52:18.745416Z","shell.execute_reply":"2024-04-27T07:52:22.030732Z"},"trusted":true,"id":"hClhaFyRF9Qa","executionInfo":{"status":"ok","timestamp":1714750643011,"user_tz":-330,"elapsed":4401,"user":{"displayName":"","userId":""}}},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":["\n","# **Split the data into features and labels**"],"metadata":{"id":"OEJD12MtGuoN"}},{"cell_type":"code","source":["X = data.drop('Class', axis=1)\n","y = data['Class']"],"metadata":{"execution":{"iopub.status.busy":"2024-04-27T07:52:23.244954Z","iopub.execute_input":"2024-04-27T07:52:23.24529Z","iopub.status.idle":"2024-04-27T07:52:23.285143Z","shell.execute_reply.started":"2024-04-27T07:52:23.245267Z","shell.execute_reply":"2024-04-27T07:52:23.284287Z"},"trusted":true,"id":"gQoWPo7fF9Qa","executionInfo":{"status":"ok","timestamp":1714750677940,"user_tz":-330,"elapsed":450,"user":{"displayName":"","userId":""}}},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":["# **Split the data into training and testing sets**"],"metadata":{"id":"wwlfVWxQG6z3"}},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"execution":{"iopub.status.busy":"2024-04-27T07:52:24.221548Z","iopub.execute_input":"2024-04-27T07:52:24.222111Z","iopub.status.idle":"2024-04-27T07:52:24.226103Z","shell.execute_reply.started":"2024-04-27T07:52:24.22208Z","shell.execute_reply":"2024-04-27T07:52:24.22518Z"},"trusted":true,"id":"NcXanE-WF9Qa","executionInfo":{"status":"ok","timestamp":1714750728828,"user_tz":-330,"elapsed":454,"user":{"displayName":"","userId":""}}},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":["# **Standardize the features**"],"metadata":{"id":"PLgj5tOVHOBT"}},{"cell_type":"code","source":["scaler = StandardScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_test = scaler.transform(X_test)"],"metadata":{"execution":{"iopub.status.busy":"2024-04-27T07:52:25.284701Z","iopub.execute_input":"2024-04-27T07:52:25.285048Z","iopub.status.idle":"2024-04-27T07:52:25.313558Z","shell.execute_reply.started":"2024-04-27T07:52:25.285021Z","shell.execute_reply":"2024-04-27T07:52:25.312565Z"},"trusted":true,"id":"pAOUi6ljF9Qb","executionInfo":{"status":"ok","timestamp":1714750804697,"user_tz":-330,"elapsed":460,"user":{"displayName":"","userId":""}}},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":["# **Initialize the KNN classifier**"],"metadata":{"id":"nnuQRdOiHXKO"}},{"cell_type":"code","source":["knn = KNeighborsClassifier(n_neighbors=5)"],"metadata":{"execution":{"iopub.status.busy":"2024-04-27T07:52:26.159074Z","iopub.execute_input":"2024-04-27T07:52:26.159454Z","iopub.status.idle":"2024-04-27T07:52:26.189807Z","shell.execute_reply.started":"2024-04-27T07:52:26.159426Z","shell.execute_reply":"2024-04-27T07:52:26.189071Z"},"trusted":true,"id":"ipGZIxr1F9Qb","executionInfo":{"status":"ok","timestamp":1714750844948,"user_tz":-330,"elapsed":468,"user":{"displayName":"","userId":""}}},"execution_count":17,"outputs":[]},{"cell_type":"markdown","source":["# **Train the classifier**"],"metadata":{"id":"nB0iNJxyHjar"}},{"cell_type":"code","source":["knn.fit(X_train, y_train)"],"metadata":{"execution":{"iopub.status.busy":"2024-04-27T07:52:26.959506Z","iopub.execute_input":"2024-04-27T07:52:26.959826Z","iopub.status.idle":"2024-04-27T07:52:26.966284Z","shell.execute_reply.started":"2024-04-27T07:52:26.959784Z","shell.execute_reply":"2024-04-27T07:52:26.96532Z"},"trusted":true,"id":"3zBp1ltxF9Qb","executionInfo":{"status":"ok","timestamp":1714750968506,"user_tz":-330,"elapsed":442,"user":{"displayName":"","userId":""}},"outputId":"f87f92a8-a1c5-4885-f00b-81d48108d78c","colab":{"base_uri":"https://localhost:8080/","height":74}},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["# **Predict the labels for the test set**"],"metadata":{"id":"Fvi4VGbzH4SD"}},{"cell_type":"code","source":["y_pred = knn.predict(X_test)"],"metadata":{"id":"6QF_qi67H95S","executionInfo":{"status":"ok","timestamp":1714751123429,"user_tz":-330,"elapsed":111276,"user":{"displayName":"","userId":""}}},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":["# **Evaluate the accuracy of the model**"],"metadata":{"id":"DSm1sjgYIFMR"}},{"cell_type":"code","source":["accuracy = accuracy_score(y_test, y_pred)\n","print(\"Accuracy:\", accuracy)"],"metadata":{"execution":{"iopub.status.busy":"2024-04-27T07:52:28.44578Z","iopub.execute_input":"2024-04-27T07:52:28.44611Z","iopub.status.idle":"2024-04-27T07:52:28.486601Z","shell.execute_reply.started":"2024-04-27T07:52:28.446084Z","shell.execute_reply":"2024-04-27T07:52:28.485681Z"},"trusted":true,"id":"_QlzPnYVF9Qb","executionInfo":{"status":"ok","timestamp":1714751208568,"user_tz":-330,"elapsed":423,"user":{"displayName":"","userId":""}},"outputId":"8944d410-5018-4dec-c769-bac83bfd7c81","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9995259997893332\n"]}]},{"cell_type":"markdown","source":["# **Confusion matrix**"],"metadata":{"id":"it-h257sIwcL"}},{"cell_type":"code","source":["conf_matrix = confusion_matrix(y_test, y_pred)\n","print(\"Confusion Matrix:\\n\", conf_matrix)"],"metadata":{"execution":{"iopub.status.busy":"2024-04-27T07:52:29.144545Z","iopub.execute_input":"2024-04-27T07:52:29.145184Z","iopub.status.idle":"2024-04-27T07:52:29.165666Z","shell.execute_reply.started":"2024-04-27T07:52:29.145154Z","shell.execute_reply":"2024-04-27T07:52:29.164868Z"},"trusted":true,"id":"7xIoHytNF9Qb","executionInfo":{"status":"ok","timestamp":1714751300815,"user_tz":-330,"elapsed":720,"user":{"displayName":"","userId":""}},"outputId":"95d6fb0a-5abb-43ca-c1d4-3ec6c930db8c","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix:\n"," [[56859     5]\n"," [   22    76]]\n"]}]},{"cell_type":"markdown","source":["for credit card fraud detection with some\n","# arbitrary values"],"metadata":{"id":"gU2fmxfvJc5c"}},{"cell_type":"code","source":["import numpy as np\n","from sklearn.neighbors import KNeighborsClassifier\n","# Sample data\n","X_train = np.array([[0.1, 0.5, 0.3], [0.2, 0.4, 0.6], [0.4, 0.6, 0.7], [0.9, 0.8, 0.5]])\n","y_train = np.array([0, 0, 1, 1]) # Binary classes: 0 (non-fraud) and 1 (fraud)\n","# Test data\n","X_test = np.array([[0.3, 0.4, 0.2], [0.8, 0.7, 0.6]])\n","# Initialize the KNN classifier\n","knn = KNeighborsClassifier(n_neighbors=3)\n","# Train the classifier\n","knn.fit(X_train, y_train)"],"metadata":{"execution":{"iopub.status.busy":"2024-04-27T07:52:29.844427Z","iopub.execute_input":"2024-04-27T07:52:29.845263Z","iopub.status.idle":"2024-04-27T07:52:30.290722Z","shell.execute_reply.started":"2024-04-27T07:52:29.845233Z","shell.execute_reply":"2024-04-27T07:52:30.289731Z"},"trusted":true,"id":"H3kFunahF9Qc","executionInfo":{"status":"ok","timestamp":1714751782212,"user_tz":-330,"elapsed":456,"user":{"displayName":"","userId":""}},"outputId":"93b69a59-5141-41a5-a27d-9dbe6064485c","colab":{"base_uri":"https://localhost:8080/","height":74}},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier(n_neighbors=3)"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=3)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["# **Predict the labels for the test set**"],"metadata":{"id":"aH6QdBwRLNUj"}},{"cell_type":"code","source":["y_pred = knn.predict(X_test)\n","print(\"Predicted labels:\", y_pred)"],"metadata":{"execution":{"iopub.status.busy":"2024-04-27T07:52:31.745909Z","iopub.execute_input":"2024-04-27T07:52:31.746564Z","iopub.status.idle":"2024-04-27T07:52:31.758204Z","shell.execute_reply.started":"2024-04-27T07:52:31.746531Z","shell.execute_reply":"2024-04-27T07:52:31.756991Z"},"trusted":true,"id":"dvFz_izOF9Qc","executionInfo":{"status":"ok","timestamp":1714751889592,"user_tz":-330,"elapsed":18,"user":{"displayName":"","userId":""}},"outputId":"9271a27f-3e6a-403e-aab3-430792a15a76","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Predicted labels: [0 1]\n"]}]}]}